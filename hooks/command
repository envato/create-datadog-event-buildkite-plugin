#!/bin/bash
set -euo pipefail

main() {
  local datadog_host="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_DATADOG_HOST:-https://api.datadoghq.com}"
  local api_key="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_API_KEY}"

  curl -X POST \
    -H "Content-type: application/json" \
    -H "DD-API-KEY: ${api_key}" \
    -d "$(make_body)" \
    "${datadog_host}/api/v1/events"
}

make_body() {
  local msg_title="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_TITLE}"
  local msg_text="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_TEXT}"
  local priority="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_PRIORITY:-normal}"
  local host="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_HOST:-}"
  local alert_type="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_ALERT_TYPE:-info}"
  local aggregation_key="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_AGGREGATION_KEY:-}"
  local source_type_name="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_SOURCE_TYPE_NAME:-}"
  local related_event_id="${BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_RELATED_EVENT_ID:-}"

  local tags=""

  while IFS=$'\n' read -r tag ; do
    tags="$tags, \"$(escape_json_string "$tag")\""
  done < <(plugin_read_list TAGS)

  tags="${tags:2}"

  echo '{'
  echo "  $(escaped_pair title "$msg_title")"
  echo " ,$(escaped_pair text "$msg_text")"
  echo " ,$(escaped_pair priority "$priority")"
  echo " ,$(escaped_pair alert_type "$alert_type")"

  if [ -n "$host" ]; then
    echo " ,$(escaped_pair host "$host")"
  fi

  if [ -n "$aggregation_key" ]; then
    echo " ,$(escaped_pair aggregation_key "$aggregation_key")"
  fi

  if [ -n "$related_event_id" ]; then
    echo " ,$(escaped_pair related_event_id "$related_event_id")"
  fi

  if [ -n "$source_type_name" ]; then
    echo " ,$(escaped_pair source_type_name "$source_type_name")"
  fi

  if [ -n "$tags" ]; then
    echo ' ,"tags": ['"$tags"']'
  fi

  echo '}'
}

# probably buggy, PRs welcome
escape_json_string() {
  local sed_cmd
  sed_cmd="$(command -v sed)"

  # use gsed if it's available
  if command -v gsed >/dev/null 2>&1; then
    sed_cmd="$(command -v gsed)"
  fi

  # escape slashes, tabs, newlines, then double-quotes
  echo "$1" | $sed_cmd -Ee 's/\\/\\\\/g' | $sed_cmd -Ee 's/\t/\\t/g' | $sed_cmd -Ee ':a;N;$!ba;s/\r{0,1}\n/\\n/g' | $sed_cmd -Ee 's/"/\\"/g'
}

# https://github.com/buildkite-plugins/shellcheck-buildkite-plugin/blob/08694ed7f660dfd21e7639e8e861f23ba605d351/hooks/command#L5-L20
plugin_read_list() {
  local prefix="BUILDKITE_PLUGIN_CREATE_DATADOG_EVENT_$1"
  local parameter="${prefix}_0"

  if [[ -n "${!parameter:-}" ]]; then
    local i=0
    local parameter="${prefix}_${i}"
    while [[ -n "${!parameter:-}" ]]; do
      echo "${!parameter}"
      i=$((i+1))
      parameter="${prefix}_${i}"
    done
  elif [[ -n "${!prefix:-}" ]]; then
    echo "${!prefix}"
  fi
}

escaped_pair() {
  echo "\"$1\": \"$(escape_json_string "$2")\""
}

main
